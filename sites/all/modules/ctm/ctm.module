<?php

/**
 * Implementation of hook_form_alter(). Menu Settings for Content Type.
 */
function ctm_form_alter(&$form, $form_state, $form_id) {
	// Menu Setting for content types - Content Type Form
	if ($form_id == 'node_type_form') {
		$form['menu_settings'] = array(
		'#type' => 'fieldset',
		'#title' => t('Menu Settings'),
		'#description' => t('Enable Menu Settings for this content type.'),
		'#collapsible' => TRUE,
	);

	$default_values = variable_get($form['#node_type']->type.'_menu_settings', array());
	//$default_values = $default_values ? $default_values : array();
	$options = menu_get_menus();
	$form['menu_settings']['menu_settings'] = array(
		'#type' => 'checkboxes',
		'#title' => t('Enable the Menus you want to be available for this Content Type'),
		'#default_value' => $default_values,
		'#options' => $options,
	);
	$form['#submit'][] = 'ctm_node_type_form_submit';

	// inclind
	$item = $form['#node']->menu;

	// Generate a list of possible parents (not including this item or descendants).
	$options = menu_parent_options(menu_get_menus(), $item);
	$default = variable_get($form['#node_type']->type.'_menu_parent', NULL);
	if (!isset($options[$default])) {
		$default = 'primary-links:0';
	}
	$form['menu_settings']['menu_parent'] = array(
		'#type' => 'select',
		'#title' => t('Default parent item'),
		'#default_value' => $default,
		'#options' => $options,
		'#description' => t('Choose the default parent menu item for nodes of this type to go under.'),
		'#attributes' => array('class' => 'menu-title-select'),
	);
	$form['#submit'][] = 'menu_node_form_submit';
} elseif (isset($form['#node']) && $form['#node']->type .'_node_form' == $form_id) {
// Menu Settings for Node Edit (Form)

	$menu_settings = variable_get($form['#node']->type.'_menu_settings', array());
	$menu_parent = variable_get($form['#node']->type.'_menu_parent', NULL);


	unset($form['menu']['delete']);
	if ($menu_settings) {
		$menus = array_intersect_key(menu_get_menus(), $menu_settings);
		$options = menu_parent_options($menus, $form['menu_settings']['#item']);
		$form['menu_settings']['parent']['#options'] = $options;

		$form['menu']['parent']['#options'] = $options;

		if (arg(1) == "add")
			$form['menu']['parent']['#default_value'] = $menu_parent;

		} else {
			unset($form['menu_settings']);
		}
	} elseif ($form_id == 'node_type_delete_confirm') {
		// Delete Content Type
		$form['#submit'][] = 'ctm_node_type_delete_confirm';
	}
}

/**
 *Content Type Form Submit - Save Menu Settings for Content Type. 
 */
function ctm_node_type_form_submit(&$form, $form_state) {
	$menu_settings = array_filter($form_state['values']['menu_settings']);
	$menu_parent = $form_state['values']['menu_parent'];

	if ($menu_settings) {
		variable_set($form_state['values']['type'].'_menu_settings', $menu_settings);
	} else {
		variable_del($form_state['values']['type'].'_menu_settings');
	}

	if ($menu_parent) {
		variable_set($form_state['values']['type'].'_menu_parent', $menu_parent);
	} else {
		variable_del($form_state['values']['type'].'_menu_parent');
	}
}

/**
 *Delete Content Type Form Submit - Delete Menu Settings Variable. 
 */
function ctm_node_type_delete_confirm(&$form, $form_state) {
	variable_del($form_state['values']['type'].'_menu_settings');
	variable_del($form_state['values']['type'].'_menu_parent');
}
